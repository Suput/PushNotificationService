# Docker
# Build a Docker image
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- main
- develop

resources:
- repo: self

name: $(BuildID)-$(Build.SourceBranchName)

variables:
  ${{ if notIn(variables['Build.SourceBranchName'], 'main', 'develop') }}:
    deployService: false
    deployEnvironment: 'no'
    imageTags: 'no'
    serviceName: 'no'
  ${{ if eq(variables['Build.SourceBranchName'], 'develop') }}:
    deployService: true
    deployEnvironment: development
    imageTags: |
      $(Build.BuildId)
      develop
    serviceName: itlab-develop_push-service
  ${{ if eq(variables['Build.SourceBranchName'], 'main') }}:
    deployService: true
    deployEnvironment: production
    imageTags: |
      $(Build.BuildId)
      latest
    serviceName: itlab_push-service

stages:
- stage: Build
  displayName: Build image
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: ubuntu-latest
    steps:
    - task: Docker@2
      displayName: Build image for docker hub
      inputs:
        containerRegistry: 'rtuitlab connection by admin'
        repository: 'rtuitlab/itlab-push-service'
        command: 'buildAndPush'
        Dockerfile: '$(Build.SourcesDirectory)/Dockerfile'
        buildContext: '$(Build.SourcesDirectory)'
        tags: ${{variables.imageTags}}
    - task: Docker@2
      displayName: Build image for private docker registry
      inputs:
        containerRegistry: 'private rtuitlab registry'
        repository: 'rtuitlab/itlab-push-service'
        command: 'buildAndPush'
        Dockerfile: '$(Build.SourcesDirectory)/Dockerfile'
        buildContext: '$(Build.SourcesDirectory)'
        tags: ${{variables.imageTags}}

- stage: deploy
  displayName: deploy
  condition: and(succeeded(), ${{variables.deployService}})
  jobs:
    - deployment: Deploy
      displayName: Deploy
      pool:
        vmImage: 'ubuntu-latest'
      environment: ${{variables.deployEnvironment}}
      strategy:
        runOnce:
          deploy:
            steps:
              - download: none
              - task: SSH@0
                inputs:
                  sshEndpoint: 'swarm manager'
                  runOptions: 'commands'
                  commands: 'docker service update --image registry.rtuitlab.dev/rtuitlab/itlab-push-service:$(Build.BuildId) ${{variables.serviceName}} --with-registry-auth'
                  readyTimeout: '20000'